#! /bin/bash

rm -rf ./out_files/mpi/xs/*.out
rm -rf ./err_files/mpi/xs/*.err

rm -rf ./out_files/mpi/s/*.out
rm -rf ./err_files/mpi/s/*.err

rm -rf ./out_files/mpi/m/*.out
rm -rf ./err_files/mpi/m/*.err

rm -rf ./out_files/mpi/l/*.out
rm -rf ./err_files/mpi/l/*.err

rm -rf ./out_files/mpi/xl/*.out
rm -rf ./err_files/mpi/xl/*.err

echo "Time;Nthreads;MatrixSize">result_mpi_polus.csv

make mpi_polus_xs
for (( i = 1; i <= 128; i*=2 ))
do
mpisubmit.pl -p $i --stdout ./out_files/mpi/xs/$i.out --stderr ./err_files/mpi/xs/$i.err ./2mm_mpi_xs
done

wait 

make mpi_polus_s
for (( i = 1; i <= 128; i*=2 ))
do
mpisubmit.pl -p $i --stdout ./out_files/mpi/s/$i.out --stderr ./err_files/mpi/s/$i.err ./2mm_mpi_s
done

wait 

make mpi_polus_m
for (( i = 1; i <= 128; i*=2 ))
do
mpisubmit.pl -p $i --stdout ./out_files/mpi/m/$i.out --stderr ./err_files/mpi/m/$i.err ./2mm_mpi_m
done

wait 

make mpi_polus_l
for (( i = 1; i <= 128; i*=2 ))
do
mpisubmit.pl -p $i --stdout ./out_files/mpi/l/$i.out --stderr ./err_files/mpi/l/$i.err ./2mm_mpi_l
done

wait 

make mpi_polus_xl
for (( i = 1; i <= 128; i*=2 ))
do
mpisubmit.pl -p $i --stdout ./out_files/mpi/xl/$i.out --stderr ./err_files/mpi/xl/$i.err ./2mm_mpi_xl
done
